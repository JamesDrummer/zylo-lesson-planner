name: Build and Push Docker Image


# This tells GitHub to run the workflow every time you push to the 'master' branch.
# If your main branch is called 'main', change 'master' to 'main'.
on:
  push:
    branches: [ "master" ]

jobs:
  # Defines the single job in this workflow, you can name it anything.
  build_and_push:
    # The type of virtual machine to run the job on. 'ubuntu-latest' is standard.
    runs-on: ubuntu-latest

    # These are permissions the job needs. It needs to read the repository contents
    # and write to the packages (the container registry).
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Checks out your repository's code so the job can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Logs into the GitHub Container Registry.
      # It uses a special, secure GITHUB_TOKEN so you don't need to use your PAT here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Builds the Docker image from your Dockerfile and pushes it.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # Tells the action to look for the Dockerfile in the root of your project.
          context: .
          # This tells the action to actually push the image after building it.
          push: true
          # This creates the tag for your image. It dynamically uses your GitHub
          # username and repository name, so it's perfectly configured for you.
          # It will create: ghcr.io/jamesdrummer/zylo-lesson-planner:latest
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest